ace:
  tool:
    auto:
      generator:
        mybatis:
          plus:
            #全局配置
            global:
              #生成文件的输出目录【默认 D 盘根目录】
              outputDir: d:/
              #是否覆盖已有文件
              fileOverride: true
              #是否打开输出目录
              open: true
              #是否在xml中添加二级缓存配置
              enableCache: false
              # 开发人员
              author: Caspar 279397942@qq.com
              # 开启 Kotlin 模式
              kotlin: false
              # 开启 swagger2 模式
              swagger2: true
              # 开启 ActiveRecord 模式
              activeRecord: false
              # 开启 BaseResultMap
              baseResultMap: false
              # 时间类型对应策略 com.baomidou.mybatisplus.generator.config.rules.DateType
              dateType: TIME_PACK
              # 各层文件名称方式，例如： %sAction 生成 UserAction
              # %s 为占位符
              #entityName: '%s'
              mapperName: '%sMapper'
              xmlName: '%sMapper'
              serviceName: '%sService'
              serviceImplName: '%sServiceImpl'
              controllerName: '%sController'
              controllerServiceName: '%sService'
              # 指定生成的主键的ID类型 com.baomidou.mybatisplus.annotation.IdType
              idType: NONE
            #策略配置
            strategy:                
              #是否大写命名
              isCapitalMode: false
              #是否跳过视图
              skipView: false
              #名称转换 com.baomidou.mybatisplus.generator.config.INameConvert接口
              #nameConvert:
              #数据库表映射到实体的命名策略  com.baomidou.mybatisplus.generator.config.rules.NamingStrategy
              naming: underline_to_camel
              #数据库表字段映射到实体的命名策略
              #未指定按照 naming 执行
              columnNaming: underline_to_camel
              #表前缀
              #tablePrefix:
              #字段前缀
              #fieldPrefix:
              #自定义继承的Entity类全称，带包名
              #superEntityClass:
              #自定义基础的Entity类，公共字段
              #superEntityColumns
              #自定义继承的Mapper类全称，带包名
              superMapperClass: com.baomidou.mybatisplus.core.mapper.BaseMapper
              #自定义继承的Service类全称，带包名
              superServiceClass: com.baomidou.mybatisplus.extension.service.IService
              #自定义继承的ServiceImpl类全称，带包名
              superServiceImplClass: com.baomidou.mybatisplus.extension.service.impl.ServiceImpl
              #自定义继承的Controller类全称，带包名
              #superControllerClass:
              #需要包含的表名（与exclude二选一配置）
              #@since 3.3.0 正则匹配不再支持,请使用{@link #setLikeTable(LikeTable)}}
              #include:
              #需要排除的表名
              #@since 3.3.0 正则匹配不再支持,请使用{@link #setNotLikeTable(LikeTable)}}
              #exclude:
              #实体是否生成 serialVersionUID
              entitySerialVersionUID: false
              #【实体】是否生成字段常量（默认 false）<br>
              #-----------------------------------<br>
              #public static final String ID: "test_id"
              entityColumnConstant: true
              #【实体】是否为构建者模型（默认 false）<br>
              #-----------------------------------<br>
              #public User setName(String name) { this.name: name return this }
              entityBuilderModel: false
              #【实体】是否为lombok模型（默认 false）<br>
              #<a href="https://projectlombok.org/">document</a>
              entityLombokModel: true
              #Boolean类型字段是否移除is前缀（默认 false）<br>
              #比如: 数据库字段名称: 'is_xxx',类型为: tinyint. 在映射实体的时候则会去掉is,在实体类中映射最终结果为 xxx
              entityBooleanColumnRemoveIsPrefix: false
              #生成 <code>@RestController</code> 控制器
              #<pre>
              #     <code>@Controller</code> -> <code>@RestController</code>
              #</pre>
              restControllerStyle: true
              #驼峰转连字符
              #<pre>
              #     <code>@RequestMapping("/managerUserActionHistory")</code> -> <code>@RequestMapping("/manager-user-action-history")</code>
              #</pre>
              controllerMappingHyphenStyle: true
              #是否生成实体时，生成字段注解
              entityTableFieldAnnotationEnable: false
              #乐观锁属性名称
              versionFieldName: row_version
              #逻辑删除属性名称
              logicDeleteFieldName: delete_flag
              #表填充字段
              #tableFillList: null
              #包含表名
              #@since 3.3.0
              #likeTable:
              #不包含表名
              #@since 3.3.0
              #notLikeTable:
            #数据库连接配置
            data-source:
              #驱动连接的URL
              url: jdbc:mysql://localhost:3306/ace_account?useUnicode=true&serverTimezone=Asia/Shanghai&useSSL=false&characterEncoding=utf8
              #驱动名称
              driverName: com.mysql.cj.jdbc.Driver
              #数据库连接用户名
              username: root
              #数据库连接密码
              password: root
            #包配置 ace.tool.code.auto.generator.config.AcePackageConfig
            package:              
              #父包名。如果为空，将下面子包名必须写全部， 否则就只需写子包名              
              parent:
              #父包模块名
              #moduleName: null
              #Entity包名
              entity: ace.account.dal.api.db.entity
              #Service包名
              service: ace.account.dal.api.db.service
              #Service Impl包名
              serviceImpl: ace.account.dal.api.db.service.impl
              #Mapper包名
              mapper: ace.account.dal.api.db.mapper
              #Mapper XML包名
              xml: ace.account.dal.api.db.mapper.xml
              #Controller包名
              controller: ace.account.dal.api.service.impl
              #Controller接口包名
              controllerService: ace.account.dal.api.service
            #模板配置 ace.tool.code.auto.generator.config.AceTemplateConfig
            template:
              #entity:
              #entityKt:
              #service:
              #serviceImpl:
              #mapper:
              #xml模板
              #xml: null
              #controller:
              #控制层接口模板
              controllerService:/templates/controllerService.java




 



